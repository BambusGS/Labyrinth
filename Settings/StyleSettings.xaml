<Window x:Class="Mazeinator.StyleSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        UseLayoutRounding="True" Background="Ivory"
        Title="Maze Visual Settings" Height="500" Width="800"
        Topmost="True" ResizeMode="CanResizeWithGrip" ShowInTaskbar="False"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded">

    <Window.Resources>
        <Style x:Key="ColorPickerStyle" TargetType="xctk:ColorPicker">
            <EventSetter Event="SelectedColorChanged" Handler="SelectedColorChangedEvent" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="UsingAlphaChannel" Value="False" />
            <Setter Property="DisplayColorAndName" Value="True" />
            <Setter Property="DisplayColorTooltip" Value="True" />
            <Setter Property="AvailableColorsSortingMode" Value="HueSaturationBrightness" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>

        <Style x:Key="MultiplierStyle" TargetType="xctk:IntegerUpDown">
            <EventSetter Event="ValueChanged" Handler="IntegerUpDown_ValueChanged" />
            <Setter Property="Minimum" Value="20" />
            <Setter Property="Maximum" Value="500" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>

        <Style x:Key="TextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="6,3,6,3" />
        </Style>

        <Style x:Key="GroupStyle" TargetType="GroupBox">
            <Setter Property="Margin" Value="5,1,5,1" />
        </Style>

        <Style x:Key="StackGrid" TargetType="Grid">
            <Setter Property="Margin" Value="0,1,4,1" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
                    Orientation="Vertical">

            <GroupBox Header="Color " Style="{StaticResource GroupStyle}">
                <Grid Style="{StaticResource StackGrid}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Maze background color:" Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Maze wall color:" Style="{StaticResource TextStyle}" />
                        <StackPanel Orientation="Horizontal" Margin="6,0,0,0">
                            <CheckBox VerticalAlignment="Center"
                                      IsChecked="{Binding Path=RenderNode, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" />
                            <TextBlock Text="Node boundary color:"  Style="{StaticResource TextStyle}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="6,0,0,0">
                            <CheckBox VerticalAlignment="Center"
                                      IsChecked="{Binding Path=RenderPoint, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" />
                            <TextBlock  Text="Node centerpoint color:" Style="{StaticResource TextStyle}" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Grid.Column="1">
                        <xctk:ColorPicker SelectedColor="{Binding Path=BackgroundColor, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                        <xctk:ColorPicker SelectedColor="{Binding Path=WallColor, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                        <xctk:ColorPicker IsEnabled="{Binding Path=RenderNode, Mode=OneWay}" SelectedColor="{Binding Path=NodeColor, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                        <xctk:ColorPicker IsEnabled="{Binding Path=RenderPoint, Mode=OneWay}" SelectedColor="{Binding Path=PointColor, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                    </StackPanel>
                </Grid>
            </GroupBox>

            <GroupBox Header="Path " Style="{StaticResource GroupStyle}">
                <Grid Style="{StaticResource StackGrid}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Start node color:" Style="{StaticResource TextStyle}" />
                        <TextBlock Text="End node color:" Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Path gradient color start:" Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Path gradient color end:" Style="{StaticResource TextStyle}" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Show explored nodes: " Style="{StaticResource TextStyle}" />
                            <CheckBox VerticalAlignment="Center"
                                  IsChecked="{Binding Path=RenderRoot, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Grid.Column="1">
                        <xctk:ColorPicker SelectedColor="{Binding Path=StartPointColor, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                        <xctk:ColorPicker SelectedColor="{Binding Path=EndPointColor, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                        <StackPanel Orientation="Vertical">
                            <xctk:ColorPicker SelectedColor="{Binding Path=RootColorBegin, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                            <xctk:ColorPicker SelectedColor="{Binding Path=RootColorEnd, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </GroupBox>

            <GroupBox Header="Shape " Style="{StaticResource GroupStyle}">
                <Grid Style="{StaticResource StackGrid}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Wall line end shape:" Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Path line end shape:" Style="{StaticResource TextStyle}" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,2,3,1">
                            <TextBlock Text="Square nodes: " ToolTip="Make node width and height the same size" />
                            <CheckBox IsChecked="{Binding Path=IsSquare, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"
                                      VerticalAlignment="Center" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Grid.Column="1">
                        <ComboBox Name="cmbLineCap" SelectionChanged="CmbLineCap_SelectionChanged" Margin="2,1,0,1" />
                        <ComboBox Name="cmbPathCap" SelectionChanged="CmbPathCap_SelectionChanged" Margin="2,1,0,1" />
                    </StackPanel>
                </Grid>
            </GroupBox>

            <GroupBox Header="Size " Style="{StaticResource GroupStyle}">
                <Grid Style="{StaticResource StackGrid}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Wall width % " Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Path size % " Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Boundary width % " Style="{StaticResource TextStyle}" />
                        <TextBlock Text="Centerpoint size % " Style="{StaticResource TextStyle}" />
                    </StackPanel>

                    <StackPanel Grid.Column="1">
                        <xctk:IntegerUpDown Style="{StaticResource MultiplierStyle}"
                                            Value="{Binding Path=WallThickness, Mode=TwoWay}" />

                        <xctk:IntegerUpDown Style="{StaticResource MultiplierStyle}"
                                            Value="{Binding Path=PathThickness, Mode=TwoWay}" />

                        <xctk:IntegerUpDown Style="{StaticResource MultiplierStyle}"
                                            IsEnabled="{Binding Path=RenderNode, Mode=OneWay}" Value="{Binding Path=NodeThickness, Mode=TwoWay}" />

                        <xctk:IntegerUpDown Style="{StaticResource MultiplierStyle}"
                                            IsEnabled="{Binding Path=RenderPoint, Mode=OneWay}" Value="{Binding Path=PointThickness, Mode=TwoWay}" />
                    </StackPanel>
                </Grid>
            </GroupBox>
        </StackPanel>

        <Canvas Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                x:Name="MainCanvas"  Background="Transparent"
                Width="auto" Height="auto" Margin="10,10,10,10">
            <Image x:Name="MazePreview" Stretch="None"
                   Width="{Binding Path=ActualWidth, ElementName=MainCanvas}" Height="{Binding Path=ActualHeight, ElementName=MainCanvas}" />
        </Canvas>

        <!--https://github.com/xceedsoftware/wpftoolkit/wiki/ColorPicker-->
        <!--ZOOMBOX could be useful with transitions (aka rendering in higher resolutions)-->

        <StackPanel Grid.Row="2" Grid.ColumnSpan="3"
                     Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Click="PlainStyle"
                    MinWidth="60" Margin="0,7,5,7"  Padding="15,0,15,2" >_Plain</Button>
            <Button Click="DefaultValues"
                    MinWidth="60" Margin="5,7,5,7" Padding="12,0,12,2">_Default</Button>
            <Button Click="BtnDialogOK_Click" IsDefault="True"
                    MinWidth="60" Margin="5,7,5,7"  Padding="20,0,20,2">_Ok</Button>
            <Button IsCancel="True"
                    MinWidth="60" Margin="5,7,7,7" Padding="15,0,15,2">_Cancel</Button>
        </StackPanel>
    </Grid>
</Window>

<!--<Window x:Class="Mazeinator.StyleSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        UseLayoutRounding="True" Background="Ivory"
        Title="Maze Visual Settings" Height="450" Width="750"
        Topmost="True" ResizeMode="CanMinimize" ShowInTaskbar="False"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded">

    <Window.Resources>
        <Style x:Key="ColorPickerStyle" TargetType="xctk:ColorPicker">
            <EventSetter Event="SelectedColorChanged" Handler="SelectedColorChangedEvent" />
            <Setter Property="MinWidth" Value="90" />
            <Setter Property="UsingAlphaChannel" Value="False" />
            <Setter Property="DisplayColorAndName" Value="True" />
            <Setter Property="DisplayColorTooltip" Value="True" />
            <Setter Property="AvailableColorsSortingMode" Value="HueSaturationBrightness" />
            <Setter Property="Margin" Value="2,2,2,2" />
        </Style>

        <Style x:Key="MultiplierStyle" TargetType="xctk:IntegerUpDown">
            <EventSetter Event="ValueChanged" Handler="IntegerUpDown_ValueChanged" />
            <Setter Property="Minimum" Value="20" />
            <Setter Property="Maximum" Value="500" />
            <Setter Property="MinWidth" Value="80" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="0" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="6*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Canvas Grid.Column="0" Grid.Row="0"
                x:Name="MainCanvas"  Background="Transparent"
                Width="auto" Height="auto" Margin="10,10,10,10">
            <Image x:Name="MazePreview" Stretch="None"
                   Width="{Binding Path=ActualWidth, ElementName=MainCanvas}" Height="{Binding Path=ActualHeight, ElementName=MainCanvas}" />
        </Canvas>

        <Grid Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0" Grid.Row="0" Grid.RowSpan="4"
                        Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Square nodes: " ToolTip="Make node width and height the same size" />
                <CheckBox IsChecked="{Binding Path=IsSquare, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"
                          VerticalAlignment="Center" />
            </StackPanel>

            <TextBlock Grid.Column="1" Grid.Row="0"
                       Text="Wall width % "
                       HorizontalAlignment="Right" />
            <xctk:IntegerUpDown Grid.Column="2" Grid.Row="0"
                                Value="{Binding Path=WallThickness, Mode=TwoWay}"
                                Style="{StaticResource MultiplierStyle}" />

            <TextBlock Grid.Column="1" Grid.Row="1"
                       Text="Path size % "
                       HorizontalAlignment="Right" />
            <xctk:IntegerUpDown Grid.Column="2" Grid.Row="1"
                                Value="{Binding Path=PathThickness, Mode=TwoWay}"
                                Style="{StaticResource MultiplierStyle}" />

            <TextBlock Grid.Column="1" Grid.Row="2"
                       Text="Boundary width % "
                       HorizontalAlignment="Right" />
            <xctk:IntegerUpDown Grid.Column="2" Grid.Row="2"
                                IsEnabled="{Binding Path=RenderNode, Mode=OneWay}" Value="{Binding Path=NodeThickness, Mode=TwoWay}"
                                Style="{StaticResource MultiplierStyle}" />

            <TextBlock Grid.Column="1" Grid.Row="3"
                       Text="Centerpoint size % "
                       HorizontalAlignment="Right" />
            <xctk:IntegerUpDown Grid.Column="2" Grid.Row="3"
                                IsEnabled="{Binding Path=RenderPoint, Mode=OneWay}" Value="{Binding Path=PointThickness, Mode=TwoWay}"
                                Style="{StaticResource MultiplierStyle}" />
        </Grid>

        -->
<!--https://github.com/xceedsoftware/wpftoolkit/wiki/ColorPicker-->
<!--ZOOMBOX could be useful with transitions (aka rendering in higher resolutions)-->
<!--
        <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Margin="0,10,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0"
                       Text="Maze background color:"
                       VerticalAlignment="Center" />
            <xctk:ColorPicker Grid.Column="1" Grid.Row="0"
                              SelectedColor="{Binding Path=BackgroundColor, Mode=TwoWay}"
                              Style="{StaticResource ColorPickerStyle}" />

            <TextBlock Grid.Column="0" Grid.Row="1"
                       Text="Maze wall color:"
                       VerticalAlignment="Center" />
            <xctk:ColorPicker Grid.Column="1" Grid.Row="1"
                              SelectedColor="{Binding Path=WallColor, Mode=TwoWay}"
                              Style="{StaticResource ColorPickerStyle}" />

            <CheckBox Grid.Column="0" Grid.Row="2"
                     IsChecked="{Binding Path=RenderNode, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"
                       VerticalAlignment="Center">
                <TextBlock  Text="Node boundary color:" />
            </CheckBox>
            <xctk:ColorPicker Grid.Column="1" Grid.Row="2"
                              IsEnabled="{Binding Path=RenderNode, Mode=OneWay}" SelectedColor="{Binding Path=NodeColor, Mode=TwoWay}"
                              Style="{StaticResource ColorPickerStyle}" />

            <CheckBox Grid.Column="0" Grid.Row="3"
                      IsChecked="{Binding Path=RenderPoint, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"
                      VerticalAlignment="Center">
                <TextBlock  Text="Node centerpoint color:" />
            </CheckBox>
            <xctk:ColorPicker Grid.Column="1" Grid.Row="3"
                              IsEnabled="{Binding Path=RenderPoint, Mode=OneWay}" SelectedColor="{Binding Path=PointColor, Mode=TwoWay}"
                              Style="{StaticResource ColorPickerStyle}" />

            <Separator Grid.ColumnSpan="2" Grid.Row="4" Height="5" />

            <TextBlock Grid.Column="0" Grid.Row="5"
                       Text="Start node color:"
                       VerticalAlignment="Center" />
            <xctk:ColorPicker Grid.Column="1" Grid.Row="5"
                              SelectedColor="{Binding Path=StartPointColor, Mode=TwoWay}"
                              Style="{StaticResource ColorPickerStyle}" />

            <TextBlock Grid.Column="0" Grid.Row="6"
                       Text="End node color:"
                       VerticalAlignment="Center" />
            <xctk:ColorPicker Grid.Column="1" Grid.Row="6"
                              SelectedColor="{Binding Path=EndPointColor, Mode=TwoWay}"
                              Style="{StaticResource ColorPickerStyle}" />

            <TextBlock Grid.Column="0" Grid.Row="7"
                       Text="Path color:"
                       VerticalAlignment="Center" />
            <StackPanel Grid.Column="1" Grid.Row="7" Orientation="Vertical">
                <xctk:ColorPicker SelectedColor="{Binding Path=RootColorBegin, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
                <xctk:ColorPicker SelectedColor="{Binding Path=RootColorEnd, Mode=TwoWay}" Style="{StaticResource ColorPickerStyle}" />
            </StackPanel>

            <StackPanel Grid.Column="0" Grid.Row="8"
                        Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock Text="Show explored nodes: " />
                <CheckBox IsChecked="{Binding Path=RenderRoot, Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"
                          VerticalAlignment="Center" />
            </StackPanel>

            <Separator Grid.ColumnSpan="2" Grid.Row="9" Height="5" />

            <TextBlock Grid.Column="0" Grid.Row="10"
                       Text="Wall line end shape:"
                       VerticalAlignment="Center" />
            <ComboBox Name="cmbLineCap" Grid.Column="1" Grid.Row="10"
                      SelectionChanged="CmbLineCap_SelectionChanged" Margin="2,2,2,2" />

            <TextBlock Grid.Column="0" Grid.Row="11"
                       Text="Path line end shape:"
                       VerticalAlignment="Center" />
            <ComboBox Name="cmbPathCap" Grid.Column="1" Grid.Row="11"
                      SelectionChanged="CmbPathCap_SelectionChanged"
                      Margin="2,2,2,2" />
        </Grid>

        <StackPanel Grid.Row="2" Grid.ColumnSpan="4"
                    HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Click="PlainStyle"
                    MinWidth="60" Margin="0,7,5,7"  Padding="15,0,15,2" >_Plain</Button>
            <Button Click="DefaultValues"
                    MinWidth="60" Margin="5,7,5,7" Padding="12,0,12,2">_Default</Button>
            <Button Click="BtnDialogOK_Click" IsDefault="True"
                    MinWidth="60" Margin="5,7,5,7"  Padding="20,0,20,2">_Ok</Button>
            <Button IsCancel="True"
                    MinWidth="60" Margin="5,7,7,7" Padding="15,0,15,2">_Cancel</Button>
        </StackPanel>
    </Grid>
</Window>-->