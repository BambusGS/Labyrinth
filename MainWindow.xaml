<Window x:Class="Mazeinator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Mazeinator" Height="720" Width="1280" MinHeight="480" MinWidth="960" Background="Ivory"
        UseLayoutRounding="True" WindowStartupLocation="CenterScreen"
        SizeChanged="Window_SizeChanged"
        Closing="Window_Closing" Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip">

    <Window.InputBindings>
        <KeyBinding Command="{Binding NewFileCMD}" Modifiers="Ctrl" Key="N" />
        <KeyBinding Command="{Binding SaveFileCMD}" Modifiers="Ctrl" Key="S" />
        <KeyBinding Command="{Binding LoadFileCMD}" Modifiers="Ctrl" Key="W" />
        <KeyBinding Command="{Binding GenerateCMD}" Modifiers="Ctrl" Key="D" />
        <KeyBinding Command="{Binding GenerateBlankCMD}" Modifiers="Ctrl+Shift" Key="D" />
        <KeyBinding Command="{Binding ExportCMD}" Modifiers="Ctrl" Key="E" />
        <KeyBinding Command="{Binding QuitCMD}" Modifiers="Ctrl" Key="Q" />
        <KeyBinding Command="{Binding AboutCMD}" Key="F1" />
    </Window.InputBindings>

    <Window.Resources>
        <Style x:Key="StatusBarTextStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="3,0" />
            <Setter Property="Margin" Value="1,0" />
        </Style>

        <Style x:Key="MenuItemStyle" TargetType="MenuItem">
            <Setter Property="Padding" Value="3,0,1,0" />
            <Setter Property="Margin" Value="1,0,0,0" />
        </Style>
    </Window.Resources>

    <DockPanel>
        <!--Top menu panel-->
        <Menu DockPanel.Dock="Top" Padding="3,3">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Click="NewMaze" InputGestureText="Ctrl+N"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Generate" Click="MazeGeneration" InputGestureText="Ctrl+D"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="Generate _Blank" Click="MazeBlankGeneration" InputGestureText="Ctrl+Shift+D"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Save" Click="SaveMaze" InputGestureText="Ctrl+S"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Load" Click="LoadMaze" InputGestureText="Ctrl+W"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Export" Click="ExportMaze" InputGestureText="Ctrl+E"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Close" Click="CloseApp" InputGestureText="Ctrl+Q"  Style="{StaticResource MenuItemStyle}" />
            </MenuItem>

            <MenuItem Header="_Options">
                <MenuItem Header="Visual _Settings" Click="SettingOpen" Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Greedy" Click="Greedy_click"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Dijkstra" Click="Dijkstra_click"  Style="{StaticResource MenuItemStyle}" />
                <MenuItem Header="_Aâ˜†" Click="AStar_click"  Style="{StaticResource MenuItemStyle}" />
            </MenuItem>

            <MenuItem Header="About" Click="AboutClick" Style="{StaticResource MenuItemStyle}" />
        </Menu>

        <Grid x:Name="MainGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0"
                        Orientation="Horizontal" VerticalAlignment="Center"
                        Height="auto" Margin="0,3">
                <TextBlock Text="Width:" Style="{StaticResource StatusBarTextStyle}" />
                <xctk:IntegerUpDown Name="WidthBox" Value="{Binding Path=NodeCountX, Mode=TwoWay}" Minimum="1" Maximum="1024"
                                    TextAlignment="Center" VerticalContentAlignment="Center"
                                    Width="55" Padding="3,0" />

                <TextBlock Text="Height:" Style="{StaticResource StatusBarTextStyle}" />
                <xctk:IntegerUpDown  Name="HeightBox" Value="{Binding Path=NodeCountY, Mode=TwoWay}" Minimum="1" Maximum="1024"
                                    TextAlignment="Center" VerticalContentAlignment="Center"
                                    Width="55" Padding="3,0" />

                <Button Click="MazeGeneration" Height="auto" Padding="3,0" Margin="3,0,0,0">Generate</Button>

                <TextBlock Text="Node count: " Style="{StaticResource StatusBarTextStyle}">
                    <TextBlock Text="{Binding Path=NodeCount, Mode=OneWay}" />
                </TextBlock>
            </StackPanel>

            <!--Canvas for maze drawing-->
            <Canvas Grid.Row="1" x:Name="MainCanvas" Grid.Column="0" Background="Transparent">
                <Canvas.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Visual _Settings" Click="SettingOpen"  Style="{StaticResource MenuItemStyle}" />
                        <MenuItem Header="_Greedy" Click="Greedy_click"  Style="{StaticResource MenuItemStyle}" />
                        <MenuItem Header="_Dijkstra" Click="Dijkstra_click"  Style="{StaticResource MenuItemStyle}" />
                        <MenuItem Header="_Aâ˜†" Click="AStar_click"  Style="{StaticResource MenuItemStyle}" />
                    </ContextMenu>
                </Canvas.ContextMenu>

                <Image x:Name="pictureBox" Source="{Binding Path=MazeBindedBitmap, Mode=OneWay}" MouseLeftButtonDown="SelectNode"
                       Width="{Binding Path=ActualWidth, ElementName=MainCanvas}" Height="{Binding Path=ActualHeight, ElementName=MainCanvas}"
                       Stretch="Uniform" RenderOptions.BitmapScalingMode="Fant" />
            </Canvas>

            <StatusBar Grid.Row="2">
                <StackPanel Orientation="Horizontal">

                    <TextBlock Text="Node count: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=NodeCount, Mode=OneWay}" />
                    </TextBlock>

                    <TextBlock Text="Processing time: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=LastGenTime, Mode=OneWay}" />
                    </TextBlock>

                    <TextBlock Text="Render time: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=LastRenderTime, Mode=OneWay}" />
                    </TextBlock>

                    <TextBlock Text="Render size: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=RenderSizeX, Mode=OneWay}" />
                        <TextBlock Text="Ã—" />
                        <TextBlock Text="{Binding Path=RenderSizeY, Mode=OneWay}" />
                    </TextBlock>

                    <TextBlock Text="Canvas size: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=CanvasSizeX, Mode=OneWay}" />
                        <TextBlock Text="Ã—" />
                        <TextBlock Text="{Binding Path=CanvasSizeY, Mode=OneWay}" />
                    </TextBlock>

                    <Separator Margin="1,2,1,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                    <TextBlock Text="Path length: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=PathLength, Mode=OneWay}" />
                    </TextBlock>

                    <TextBlock Text="Explored nodes: " Style="{StaticResource StatusBarTextStyle}">
                        <TextBlock Text="{Binding Path=ExploredNodes, Mode=OneWay}" />
                    </TextBlock>

                    <Separator Margin="1,2,1,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                    <TextBlock Text="{Binding Path=Status, Mode=OneWay}" Style="{StaticResource StatusBarTextStyle}" />
                </StackPanel>
            </StatusBar>
        </Grid>
    </DockPanel>
</Window>